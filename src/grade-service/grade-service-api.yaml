openapi: 3.0.0
info:
  description: This is a simple API
  version: "1.0.0"
  title: Simple Inventory API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /student-grades:
    get:
      tags:
        - StudentGrade
      summary: Gets all Student Grade
      description: >
        Returns data from student-grades table
      operationId: getAllStudentGrade
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentGrade'
        '400':
          description: bad input parameter
    post:
      tags:
        - StudentGrade
      summary: Adds a student-grade item
      operationId: addStudentGrade
      description: Adds an item to the system
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentGrade'
        description: StudentGrade item to add
  /student-grades/{id}:
    get:
      tags:
        - StudentGrade
      summary: Gets a student-grade by ID.
      description: >
        Returns one data from student-grades table
      operationId: getStudentGradeById
      parameters:
        - name: id
          in: path
          description: Student Grade ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGrade'
    patch:
      tags:
        - StudentGrade
      summary: Update existing student grades
      description: Update certain attributes of an existing student grades in database
      operationId: changeData
      parameters:
        - in: path
          name: id
          description: Data ID that wants to be updated
          required: true
          schema:
            type: integer
        - in: header
          name: body
          description: Data object that wants to be updated
          required: true
          schema:
            $ref: '#/components/schemas/StudentGrade'
      responses:
        '200':
          description: Data successfully changed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGrade'
        '400':
          description: Request Invalid
        '404':
          description: Data not found
      requestBody:
        description: The data object that you want to change
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentGrade'
    delete:
      summary: Delete data
      description: Delete data by ID
      operationId: deleteData
      parameters:
        - in: path
          name: id
          description: ID data that you want to delete
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Data deleted successfully
        '404':
          description: Data not found
components:
  schemas:
    StudentGrade:
      type: object
      required:
        - id
        - student_user_id
        - assignment_id
        - published
        - created_at
        - updated_at
      properties:
        id:
          type: integer
          format: int64
          example: 10
        student_user_id:
          type: integer
          format: int64
          example: 10
        assignment_id:
          type: integer
          format: int64
          example: 10
        published:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
